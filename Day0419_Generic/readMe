Generic
: 다양한 종류의 데이터를 하나의 코드로 처리하기 위함
: 코드의 재사용성을 높이는 방법

기존에는 Object 변수에 여러 변수를 참조시켜서 사용
: 다양한 기능을 가지지는 못함, 다양한 데이터가 가지는 연산이 모두 다르기 때문에 구현하지 못한다.
대신 다양한 데이터를 저장하는 용도로 사용

Store 클래스
: 다양한 종류의 데이터를 저장하고 반환할 수 있는 클래스
Object 변수를 멤버로 가진다. 모든 데이터를 참조하기 위함

Generic
: Object로 다양한 데이터를 저장하기에 무리가 있다. 그래서 사용함
(클래스의 한 종류)

		클래스 이름<알파벳>, 알파벳은 아무거나 사용 가능(보통은 대문자 T, V, K, E)
public class Store<T> {						T=type, V=value, k=Key, e=element
	클래스 안에서는 T를 하나의 타입으로 생각하고 사용하면 된다.
	특정한 데이터타입을 저장하지 않기 때문에 특정한 타입만 저장하고 싶다면 다른 방식을 사용하는게 나은듯?
	(예를 들어 정수 연산을 하려고 했는데 스트링이 들어가 있어서 에러난다거나?)
}
 
//만들어놓은 제네릭인셈
Collection(컬렉션)
: 자료구조를 구현해놓은 클래스 또는 인터페이스
List, Set, Map, Stack, Queue : 인터페이스
(메서드가 선언만 되어 있는 것)
List  : ArrayList, LinkedList
배열과 같다고 보면 됨. 하지만 자동 정렬 기능과 길이가 가변적이라는 장점이 있음!
Set   : HashSet
중복되지 않는 데이터를 저장할 때 사용
Map   : HashMap
사전같은 형태!

