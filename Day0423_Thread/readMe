Thread: 프로세스 내부에서의 명령 처리 흐름
MultiThread: 병렬처리를 하기 위해 사용한다.

메인 쓰레드는 언제나 위에서 아래로 실행한다.
쓰레드가 하나(메인 쓰레드)인 상태에서는 명령의 흐름이 단방향이다. (직렬)
예를 들어 운동을 한다고 했을 때, 운동을 하고나서 노래를 듣거나 노래를 듣고나서 운동을 하는 셈. 
하지만 멀티쓰레드라면 운동을 하면서 노래를 듣는다라는 처리가 가능하다. (병렬)

병렬처리를 위한 방법
멀티프로세스  :	여러 프로그램을 동시에 실행  (프로세스: 소프트웨어의 실행 단위)
			각각 다른 프로그램이 실행되는 것이기 때문에 데이터 공유의 불편함이 있다.
멀티쓰레드	  :	하나의 프로세스에서 여러 쓰레드를 생성
			하나의 메모리 공간을 공유하면서 실행되므로 데이터 공유의 문제가 적다.
			
프로세스는 프로그램을 실행하는 단위이기 때문에 최소 하나의 쓰레드(메인 쓰레드)를 가진다.
메인 쓰레드는 개발자가 만들지 않고 프로그램이 자체적으로 생성함.
개발자가 만들어서 실행한 쓰레드를 파생 쓰레드라고 한다.

지금 하려는 것은 멀티쓰레드!
(멀티)쓰레드를 만드는 방법 : Thread 클래스의 start() 메서드를 호출하면
					    쓰레드가 하나 생성된다.
우리가 실행하고자 하는 명령을 멀티 쓰레드에서 동작시키는 방법
	1. 쓰레드 클래스를 상속받아서 run()메서드를 재정의(오버라이딩)
	2. Runnable 인터페이스를 구현해서 쓰레드를 이용하여 실행하는 방법
	Thread가 Runnable을 구현했기 때문에, Runnable을 구현해서 Thread에 넣어주면 된다.
	
쓰레드 사용 예 : 작업 처리가 오래 걸릴 때 다른 작업에 영향을 주지 않기 위함 (대기시간 낭비 안하려고)


